#!/usr/bin/env bash

#set -- $(< /dev/stdin)
#mapfile -t items < /dev/stdin
IFS=$'\n' read -d "" -ra items < /dev/stdin
#for index in "${!items[@]}"; do
#	(( ${#items[index]} > length )) && length="${#items[index]}"
#	:
#done
#matches=("${items[@]}")

trap "printf '\e8'" EXIT
read -r LINES COLUMNS < <(stty size -F /dev/tty)
printf '\e7'
while true; do
	printf '\e[H\e[30;41m%*s\e[m' "$COLUMNS"
	unset matches
	for j in "${!items[@]}"; do
		[[ ${items[j]} == *"${text// }"* ]] && {
			matches+=("${items[j]}")
			(( ${#items[j]} > length )) && length=${#items[j]}
		}
	done

	#printf '\r\033[2K'
	printf '\e[H\e[30;41m%s%*s\e[m' " $text" "$(( length + 4 - ${#text} ))"
	#printf '\e[30;41m%*s\e[m' "$((length+4-${#text}))"
	for j in "${!matches[@]}"; do
		#echo "${items[j]}"
		if (( j == sel )); then
			printf '\e[1;37;7m %s \e[m' "${matches[j]}"
			#sel=$j
		else
			printf '\e[30;41m %s \e[m' "${matches[j]}"
			#printf ' %s '
		fi
		#printf '\e[1;'
	done
	#((${#matches[@]})) || sel=$text
	printf '\e[;%sH' $(( ${#text} + 2 ))
	read -srn 1
	if [[ $REPLY == $'\e' ]]; then
		read -rsn 2 key
		[[ ${REPLY}${key} == $'\e\e['* ]] &&
			read -rs -n 1 _
		key=${REPLY}${key}
	else
		key=$REPLY
	fi
	case $key in
		"")
			printf '\e8'
			printf '%s\n' "${matches[sel]}"
			printf '\e7'
			exit
			;;
		$'\e[D')
			(( sel > 0 )) && (( sel-- ))
			;;
		$'\e[C')
			(( sel < ${#matches[@]} - 1 )) && (( sel++ ))
			;;
		$'\177'|$'\b')
			(( ${#text} > 0 )) && text=${text:: -1}
			sel=0
			;;
		*)
			text+=$key
			sel=0
			;;
	esac

done < /dev/tty
